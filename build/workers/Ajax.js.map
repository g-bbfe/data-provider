{"version":3,"sources":["../../src/workers/Ajax.js"],"names":["ERROR_TYPE","JSON","window","global","isObject","val","transformMissionConfig","config","transformedConfig","method","data","stringify","AjaxWorkerFactory","mission","resolve","reject","request","then","status","statusText","headers","response","Object","prototype","toString","call","parse","e","message","console","error","url","parserError","type","PARSER","code","rawError","businessError","isCancel","log","abortError","ABORT","subcode","timeoutError","TIMEOUT","networkError","NETWORK","networkError1"],"mappings":"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","file":"Ajax.js","sourcesContent":["import querystring from 'querystring';\nimport axios from 'axios';\n// import 'axios-response-logger';\n\nimport Const from '../const';\n\nimport createError from '../utils/CreateError';\n\nvar ERROR_TYPE = Const.ERROR_TYPE;\n\nvar JSON = (typeof window === 'undefined' ? global : window).JSON || {};\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n * @refer https://github.com/mzabriskie/axios/blob/master/lib/utils.js\n */\nfunction isObject(val) {\n    return val !== null && typeof val === 'object';\n}\n\nfunction transformMissionConfig(config) {\n\n    let transformedConfig = Object.assign({}, config)\n\n    if (config.method === 'post' && isObject(transformedConfig.data)) {\n        transformedConfig.data = querystring.stringify(transformedConfig.data);\n    }\n\n    return transformedConfig;\n}\n\nclass AjaxWorkerFactory {\n\n    do(mission) {\n        return new Promise((resolve, reject) => {\n            // axiosSchema: https://github.com/mzabriskie/axios\n            let transformedConfig = transformMissionConfig(mission.config);\n\n            axios.request(transformedConfig).then(({ data, status, statusText, headers, config, response }) => {\n                if (Object.prototype.toString.call(data) !== \"[object Object]\") {\n                    try {\n                        data = JSON.parse(data);\n                    } catch (e) {\n                        let message = \"response is not a instance of JSON \";\n                        console.error(\"response of '%s' is not JSON \", config.url);\n                        let parserError = createError({ message: message, type: ERROR_TYPE.PARSER });\n                        reject(parserError);\n\n                    }\n                }\n\n                // reslove \n                // [!important] 新增的 (data.code) 逻辑判断是为了兼容服务端api error返回结构争议\n                if (data.error || data.code) {\n                    // 2. bizError\n                    let rawError = data.error || data;\n                    let businessError = createError(rawError);\n                    reject(businessError);\n                } else {\n                    resolve(data);\n                }\n\n            }, (error) => {\n                if (axios.isCancel(error)) {\n                    // abort error\n                    console.log('Request canceled', error.message);\n                    let abortError = createError({ message: error.message, type: ERROR_TYPE.ABORT, code: error.code, subcode: error.subcode });\n                    reject(abortError);\n                } else if (error.code === 'ECONNABORTED') {\n                    // timeout error\n                    let timeoutError = createError({ message: error.message, type: ERROR_TYPE.TIMEOUT, code: error.code, subcode: error.subcode });\n                    reject(timeoutError);\n                } else if (error.response) {\n                    // network error \n                    // The request was made, but the server responded with a status code\n                    // that falls out of the range of 2xx\n                    let { status, statusText, headers, config } = error.response;\n                    let networkError = createError({ message: statusText, type: ERROR_TYPE.NETWORK, code: status, subcode: error.subcode });\n                    reject(networkError);\n                } else {\n                    console.error(\"another error: \", error);\n                    let networkError1 = createError({ message: error.message, type: ERROR_TYPE.NETWORK });\n                    reject(networkError1);\n                }\n            })\n        });\n    }\n}\n\nexport default AjaxWorkerFactory;"]}