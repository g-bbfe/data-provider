{"version":3,"sources":["../src/index.js"],"names":["AppCache","mixConfig","requestConfig","getCacheKey","url","maxAge","params","cacheKey","stringify","DataSource","workerCount","interceptors","request","response","error","requestDefers","httpMD","start","use","args","Array","prototype","push","apply","stop","resolve","reject","ignoreExpires","cacheItem","data","serverRequest","item","get","then","set","err","missionConfig","requestDefer","reduce","configPromise","interceptor","config","interceptorError","console","log","Error","message","mission","put","result","resultPromise","transformedError","errorPromise","errorOrData","handler","exceptionError","promise","ErrorType","ERROR_TYPE","Deferred","createError","createComboPromise"],"mappings":"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","file":"index.js","sourcesContent":["import querystring from 'querystring';\n\nimport Deferred from './utils/Deferred';\nimport createError from './utils/CreateError';\nimport createComboPromise from './utils/ComboPromise';\n\nimport DefaultConfig from './config';\nimport Const from './const';\n\nimport HttpWorkerFactory from './workers/Ajax';\nimport HttpMission from './missions/Http';\n\nimport MissionDispatcher from './MissionDispatcher';\n\nimport CacheData from './CacheData';\n\nconst AppCache = new CacheData('DATA_SOURCE_PROXY', 'v0.0.1');\n\nfunction mixConfig(requestConfig) {\n    return Object.assign({}, DefaultConfig, requestConfig);\n}\n\n/* 生成cache key*/\nfunction getCacheKey({ url, maxAge, params } = requestConfig) {\n\n    let cacheKey = null;\n    if (typeof maxAge === 'number') {\n        cacheKey = url + '_' + querystring.stringify(params);\n    }\n    return cacheKey;\n}\n\nfunction DataSource(workerCount = 10) {\n\n    var interceptors = {\n        request: [],\n        response: [],\n        error: []\n    };\n\n    var requestDefers = new Map();\n\n    var httpMD = new MissionDispatcher(HttpWorkerFactory, workerCount);\n    httpMD.start();\n\n    this.interceptors = {\n        request: {\n            use: (...args) => {\n                Array.prototype.push.apply(interceptors.request, args)\n                return this;\n            }\n        },\n        response: {\n            use: (...args) => {\n                Array.prototype.push.apply(interceptors.response, args)\n                return this;\n            }\n        },\n        error: {\n            use: (...args) => {\n                Array.prototype.push.apply(interceptors.error, args)\n                return this;\n            }\n        }\n    }\n\n\n    this.start = () => {\n        httpMD.start();\n    }\n\n    this.stop = () => {\n        httpMD.stop();\n    }\n\n    this.request = (requestConfig) => {\n\n        return new Promise((resolve, reject) => {\n\n            let cacheKey = getCacheKey(requestConfig);\n            let { maxAge, ignoreExpires } = requestConfig;\n            let cacheItem, data;\n\n            if (cacheKey === null) {\n                // 没有maxAge配置，直接发起serverRequest\n                resolve(this.serverRequest(requestConfig));\n            } else {\n                // 有maxAge配置，需要先检查cache\n                cacheItem = AppCache.item(cacheKey, { maxAge, ignoreExpires });\n                data = cacheItem.get();\n\n                if (data === null) {\n                    //  cache中没取到数据 || 数据过期,  发起serverRequest\n                    this.serverRequest(requestConfig)\n                        .then(data => {\n                            cacheItem.set(data);\n                            resolve(data);\n                        })\n                        .catch(err => reject(err))\n                } else {\n                    // 命中缓存\n                    resolve(data)\n                }\n            }\n\n        });\n\n    }\n\n\n    this.serverRequest = (requestConfig) => {\n\n        let missionConfig = mixConfig(requestConfig || {});\n        let requestDefer = new Deferred();\n\n        // 1. requestInterceptors\n        interceptors.request.reduce((configPromise, interceptor) => {\n                return configPromise.then(interceptor);\n            }, Promise.resolve(missionConfig))\n            .then((config) => {\n                return config;\n            }, (interceptorError) => {\n                console.log('Request Intercept Fail ... ', interceptorError);\n                if (!interceptorError instanceof Error) {\n                    interceptorError = createError({ message: interceptorError });\n                }\n                throw interceptorError;\n            })\n            // 2. doRequest\n            .then((config) => {\n                var mission = new HttpMission(config);\n                // 2.1 doRequest\n                httpMD.put(mission)\n                    // 2.2. response or error\n                    .then((result) => {\n                        // 2.2.1 responseInterceptors\n                        interceptors.response.reduce((resultPromise, interceptor) => {\n                                return resultPromise.then((result) => {\n                                    return interceptor(result, requestConfig);\n                                })\n                            }, Promise.resolve(result))\n                            .then((result) => {\n                                requestDefer.resolve(result);\n                            }, (error) => {\n                                /* \n                                 * @TODO\n                                 * error instanceof Error && requestDefer.reject(error); \n                                 */\n                                console.error('Response Intercept Exception ... ', error);\n                                throw error;\n                            })\n                    }, (error) => {\n                        // 洗数据,约定： interceptorError instanceof Error\n                        let transformedError;\n                        if (error instanceof Error) {\n                            transformedError = error;\n                        } else {\n                            transformedError = createError({ message: error });\n                        }\n                        // 2.2.2. errorInterceptors\n                        interceptors.error.reduce((errorPromise, interceptor) => {\n                                return errorPromise.then((error) => {\n                                    return interceptor(error, requestConfig);\n                                })\n                            }, Promise.resolve(transformedError))\n                            .then((errorOrData) => {\n                                /*\n                                 * 【注意！！！】\n                                 *　处理过的异常, errorInterceptor可能把error转换为正常的数据(非Error类型)\n                                 *  error(一定是一个Error类型的实例)\n                                 */\n                                let handler = errorOrData instanceof Error ? 'reject' : 'resolve';\n                                requestDefer[handler](errorOrData);\n\n                            }, (exceptionError) => {\n                                // 未处理异常\n                                console.log(\"Error Intercept Exception ... \", exceptionError);\n                                throw exceptionError;\n                            })\n                    })\n            })\n            .catch(err => {\n                requestDefer.reject(err);\n            })\n\n        return requestDefer.promise;\n    }\n}\n\nDataSource.ErrorType = Const.ERROR_TYPE;\nDataSource.Deferred = Deferred;\nDataSource.createError = createError;\nDataSource.createComboPromise = createComboPromise;\n\nexport default DataSource;\n"]}